global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3
	maxconn 2048
	tune.ssl.default-dh-param 2048
	spread-checks 5
	

defaults
  mode http
  log global
  monitor-uri /_haproxy_health_check
  option log-health-checks
  option httplog
  balance roundrobin
  option forwardfor
  option redispatch
  retries 4
  option http-server-close
  timeout client 150000
  timeout server 3600000
  timeout connect 500

  stats enable
  stats uri /_haproxy_stats
  # stats auth admin:admin # Uncomment for basic auth

frontend www-http
	bind {IP_ADDR}:80
	reqadd X-Forwarded-Proto:\ http
	default_backend www-backend
frontend www-https
	bind {IP_ADDR}:443 ssl crt /etc/haproxy/certs/{DOMAIN}.pem
	reqadd X-Forwarded-Proto:\ https
	acl letsencrypt-acl path_beg /.well-known/acme-challenge/
	use_backend letsencrypt-backend if letsencrypt-acl
	default_backend www-backend

backend www-backend
	redirect scheme https if !{ ssl_fc }
	server www-1 127.0.0.1:80 check
	server www-2 127.0.0.1:80 check

backend letsencrypt-backend
	server letsencrypt 127.0.0.1:54321

frontend http-in
        # This requires HAProxy 1.5.x
        # bind *:$HAPROXY_PORT
	bind *:15984 ssl crt /etc/haproxy/certs/{DOMAIN}.pem no-tls-tickets ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA384:AES128-SHA256:AES128-SHA:AES256-SHA256:AES256-SHA:!MD5:!aNULL:!DH:!RC4
	#Add these lines beneath bind, still within http-in
	reqadd X-Forwarded-Proto:\ https
	# Distinguish between secure and insecure requests
	acl secure dst_port eq 15984
	# Mark all cookies as secure if sent over SSL
	rsprep ^Set-Cookie:\ (.*) Set-Cookie:\ \1;\ Secure if secure
	# Add the HSTS header with a 1 year max-age
	rspadd Strict-Transport-Security:\ max-age=31536000 if secure
	# Redirect HTTP to HTTPS
	redirect scheme https code 301 if !{ ssl_fc }
        default_backend couchdbs

backend couchdbs
	option httpchk GET /_up
        http-check disable-on-404
        server couchdb1 127.0.0.1:5984 check inter 5s
        #server couchdb2 127.0.0.1:25984 check inter 5s
        #server couchdb3 127.0.0.1:35984 check inter 5s
